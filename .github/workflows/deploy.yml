name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Create ECR repository if it doesn't exist
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        aws ecr describe-repositories --repository-names my-app --region $AWS_REGION || \
        aws ecr create-repository --repository-name my-app --region $AWS_REGION

    - name: Build and push Docker image to Amazon ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        # Define the image name and tag
        IMAGE_NAME=my-app
        IMAGE_TAG=latest
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        ECR_REPOSITORY=${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_NAME}

        # Navigate to the directory containing the Dockerfile
        cd backend

        # Build the Docker image
        docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .

        # Tag the Docker image
        docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${ECR_REPOSITORY}:${IMAGE_TAG}

        # Push the Docker image to Amazon ECR
        docker push ${ECR_REPOSITORY}:${IMAGE_TAG}

    - name: Deploy to EC2 using SSM
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
      run: |
        # Install AWS CLI
        sudo apt-get update
        sudo apt-get install -y awscli

        # Run commands on EC2 instance using SSM
        aws ssm send-command \
          --instance-ids "$EC2_INSTANCE_ID" \
          --document-name "AWS-RunShellScript" \
          --comment "Deploy Docker container" \
          --parameters commands='
            $(aws ecr get-login --no-include-email --region $AWS_REGION);
            docker pull ${ECR_REPOSITORY}:${IMAGE_TAG};
            docker-compose -f /path/to/your/docker-compose.yml down;
            docker-compose -f /path/to/your/docker-compose.yml up -d;
          '
